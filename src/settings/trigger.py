from pathlib import Path

from src.settings.general import N_WORDS, FRAME_RATE, NFFT, INTERIM_DATA_DIR, LOG_DIR, PROCESSED_DATA_DIR

# TRIGGER DATA DIR DEFINITIONS
TRIGGER_INTERIM_DATA_DIR = Path("{}/trigger".format(INTERIM_DATA_DIR))
TRIGGER_PROCESSED_DATA_DIR = Path("{}/trigger".format(PROCESSED_DATA_DIR))
DEV_TRIGGER_PROCESSED_DATA_DIR = Path("{}/dev".format(TRIGGER_PROCESSED_DATA_DIR))
VAL_TRIGGER_PROCESSED_DATA_DIR = Path("{}/val".format(TRIGGER_PROCESSED_DATA_DIR))

# TRIGGER LOG DIR DEFINITIONS
TRIGGER_LOG_DIR = Path("{}/trigger".format(LOG_DIR))
TRIGGER_TRAINING_LOG_FILE = Path("{}/training.log".format(TRIGGER_LOG_DIR))
TRIGGER_CHECKPOINT_DIR = Path("{}/checkpoints".format(TRIGGER_LOG_DIR))
TRIGGER_CHECKPOINT_FILES = "{}/cp-{}.ckpt".format(TRIGGER_CHECKPOINT_DIR, "{epoch:04d}")

# ACTIVATE MULTRIGGER MODE ?
MULTRIGGER_MODE = False

# DATASET SPECIFICATIONS
N_SAMPLES_IN_TFRECORD = 100
SAMPLE_DURATION_MS = 5000
LABEL_DURATION = 25
CROSSFADE_MS = 100
FX = int(NFFT / 2) + 1
TX = int(FRAME_RATE * (SAMPLE_DURATION_MS / 1000) / NFFT) * 2

TRIGGER_KERNEL_SIZE = 15
TRIGGER_STRIDE = 4
TY = round((TX - TRIGGER_KERNEL_SIZE) / TRIGGER_STRIDE) + 1

if MULTRIGGER_MODE:
    N_CLASSES = N_WORDS + 1
else:
    N_CLASSES = 2

N_TRIGGER_DEV_SAMPLES = 400
N_TRIGGER_VAL_SAMPLES = int(N_TRIGGER_DEV_SAMPLES / 4)

# TRIGGER MODEL TRAINING SPECIFICATIONS
TRIGGER_EPOCHS = 20
TRIGGER_BATCH_SIZE = 64
